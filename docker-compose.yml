version: '3.8'

services:
  

  sonarqube:
      image: sonarqube:community
      container_name: sonarqube
      environment:
        SONAR_JDBC_URL: jdbc:postgresql://db:5432/sonar
        SONAR_JDBC_USERNAME: sonar
        SONAR_JDBC_PASSWORD: sonar
        # SONAR_WEB_CONTEXT: /sonarqube
      ports:
        - "9000:9000"  
      volumes:
        - sonarqube_data:/opt/sonarqube/data
        - sonarqube_extensions:/opt/sonarqube/extensions
      depends_on:
        - db
      networks:
        - backend

  db:
    image: postgres:15
    container_name: sonarqube_db
    environment:
      POSTGRES_USER: sonar
      POSTGRES_PASSWORD: sonar
      POSTGRES_DB: sonar
    volumes:
      - postgresql:/var/lib/postgresql/data
    networks:
      - backend
  nexus:
    image: sonatype/nexus3:latest
    container_name: nexus
    ports:
      - "8081:8081"
    volumes:
      - nexus-data:/nexus-data
    networks:
      - backend
    restart: unless-stopped

  jenkins:
    image: jenkins/jenkins:lts
    container_name: jenkins
    user: root
    ports:
      - "8080:8080"
      - "50000:50000"
    environment:
      # JENKINS_OPTS: --prefix=/jenkins
      JAVA_OPTS: "-Djenkins.install.runSetupWizard=false"
    volumes:
      - jenkins_home:/var/jenkins_home
      - ./jenkins/init.groovy.d:/var/jenkins_home/init.groovy.d:ro
    networks:
      - backend

  nginxproxymanager:
    image: jc21/nginx-proxy-manager:latest
    container_name: nginx_proxy_manager
    restart: unless-stopped
    ports:
      - "80:80"
      - "81:81" # UI
      - "443:443"
    volumes:
      - npm_data:/data
      - npm_letsencrypt:/etc/letsencrypt
    networks:
      - backend

volumes:
  sonarqube_data:
  sonarqube_extensions:
  postgresql:
  jenkins_home:
  nexus-data:
  npm_data:
  npm_letsencrypt:

networks:
  backend:
    driver: bridge
